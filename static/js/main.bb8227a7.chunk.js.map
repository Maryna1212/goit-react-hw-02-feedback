{"version":3,"sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["SectionContainer","styled","div","Title","h1","Section","title","children","StatisticTitle","h2","StatisticList","ul","StatisticListItem","li","Statistics","good","neutral","bad","total","percentage","FeedbackButton","button","FeedbackOptions","options","onLeaveFeedback","map","opt","type","onClick","NotificationText","p","Notification","message","App","state","handleClick","key","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAEaA,EAAmBC,IAAOC,IAAV,+DAKhBC,EAAQF,IAAOG,GAAV,6F,OCKHC,EARC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OAEd,eAACP,EAAD,WACE,cAACG,EAAD,UAAQG,IACHC,MCNIC,EAAiBP,IAAOQ,GAAV,6FAMdC,EAAgBT,IAAOU,GAAV,4IASbC,EAAoBX,IAAOY,GAAV,+HCWfC,EAzBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,WAA9B,OACf,qCACI,cAACX,EAAD,yBACA,eAACE,EAAD,WACI,cAACE,EAAD,UACI,yCAAYG,OAEhB,cAACH,EAAD,UACI,4CACaI,OAGjB,cAACJ,EAAD,UACI,wCAAWK,OAEf,cAACL,EAAD,UACI,0CAAaM,OAEjB,cAACN,EAAD,UACI,sDAAyBO,EAAzB,gBCpBHC,EAAiBnB,IAAOoB,OAAV,yLCiBZC,EAhBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAG,OACd,cAACN,EAAD,CACEO,KAAK,SAELC,QAAW,kBAAMJ,EAAgBE,IAHnC,SAKGA,GAHIA,SCPFG,EAAmB5B,IAAO6B,EAAV,kFCOdC,EANM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAO,cAACH,EAAD,UACFG,KCCHC,E,4MACJC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPkB,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGF,EAAME,EAAUF,GAAO,O,EAIrCG,mBAAqB,WACnB,OAAO,EAAKL,MAAMnB,KAAO,EAAKmB,MAAMlB,QAAU,EAAKkB,MAAMjB,K,EAG3DuB,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKR,MAAMnB,KAAc,EAAKwB,uB,4CAGnD,WACE,MAA+BI,KAAKT,MAA5BnB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQyB,KAAKJ,qBACbpB,EAAawB,KAAKH,kCACxB,OACE,qCACE,cAAC,EAAD,CAASlC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEiB,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBmB,KAAKR,gBAI1B,cAAC,EAAD,CAAS7B,MAAM,aAAf,SACGY,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,WAAYA,IAGd,cAAC,EAAD,CAAca,QAAQ,kC,GA5ChBY,IAAMC,WAoDTZ,ICtDfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bb8227a7.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const SectionContainer = styled.div`\n  width: 50vw;\n  margin: 0 auto;\n`;\n\nexport const Title = styled.h1`\n   font-size: 35px;\n   color: #009900;\n   text-align: center;\n`;","import PropTypes from 'prop-types';\nimport { SectionContainer, Title } from './Section.styled';\n\n\nconst Section = ({title, children}) => (\n\n  <SectionContainer>\n    <Title>{title}</Title>\n        {children}\n  </SectionContainer>\n);\n  \nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\n\n","import styled from \"styled-components\";\n\nexport const StatisticTitle = styled.h2`\n   font-size: 30px;\n   color: #0a2e70;\n   text-align: center;\n`;\n\nexport const StatisticList = styled.ul`\n   list-style: none;\n   color: teal;\n   font-size: 20px;\n   width: 50%;\n   margin: 0 auto;\n   padding: 0;\n`;\n\nexport const StatisticListItem = styled.li`\n  padding: 5px 15px;\n  display: flex;\n  justify-content: space-between;\n  border-radius: 15px;\n`;","import PropTypes from 'prop-types';\nimport {StatisticTitle, StatisticList, StatisticListItem} from './Statistics.styled';\n\nconst Statistics = ({ good, neutral, bad, total, percentage }) => (\n    <>\n        <StatisticTitle>Statistics</StatisticTitle>\n        <StatisticList>\n            <StatisticListItem>\n                <span>Good:{good}</span>\n            </StatisticListItem>\n            <StatisticListItem>\n                <span>\n                    Neutral:{neutral}\n                </span>\n            </StatisticListItem>\n            <StatisticListItem>\n                <span>Bad:{bad}</span>\n            </StatisticListItem>\n            <StatisticListItem>\n                <span>Total:{total}</span>\n            </StatisticListItem>\n            <StatisticListItem>\n                <span>Positive feedback:{percentage}%</span>\n            </StatisticListItem>\n        </StatisticList>\n    </>\n);\n\nexport default Statistics;\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    percentage: PropTypes.number.isRequired,\n};","import styled from \"styled-components\";\n\nexport const FeedbackButton = styled.button`\n  width: calc((100% - 30px) / 3);\n  height: 25px;\n  color: teal;\n  border: 1px solid green;\n  border-radius: 10px;\n  margin: 5px;\n  font-weight: 800;\n`;","import PropTypes from 'prop-types';\nimport { FeedbackButton } from './FeedbackOptions.styled';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div>\n      {options.map(opt => (\n        <FeedbackButton\n          type=\"button\"\n          key={opt}\n          onClick = {() => onLeaveFeedback(opt)}\n        >\n          {opt}\n        </FeedbackButton>\n      ))}\n    </div>\n  );\n};\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import styled from \"styled-components\";\n\nexport const NotificationText = styled.p`\n  color: teal;\n  margin: 20px;\n  font-weight: 800;\n`;\n","import PropTypes from 'prop-types';\nimport { NotificationText } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n    return <NotificationText>\n        {message}\n    </NotificationText>;\n};\n\nexport default Notification;\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n};","import React from 'react';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from './components/Notification/Notification';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = key => {\n    this.setState(prevState => {\n      return { [key]: prevState[key] + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.floor((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const percentage = this.countPositiveFeedbackPercentage();\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.handleClick}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              percentage={percentage}\n            />\n          ) : (\n            <Notification message=\"There is no feedback\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n\n// -----------------------------\n\n// class App extends React.Component {\n//   static defaultProps = {\n//     initialValue: 0,\n//   };\n\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n//   goodFeedback = () => {\n//     this.setState(prevState => ({\n//       good: prevState.good + 1,\n//     }));\n//   };\n\n//   neutralFeedback = () => {\n//     this.setState(prevState => ({\n//       neutral: prevState.neutral + 1,\n//     }));\n//   };\n\n//   badFeedback = () => {\n//     this.setState(prevState => ({\n//       bad: prevState.bad + 1,\n//     }));\n//   };\n\n//   countTotalFeedback = () => {\n//     return this.state.good + this.state.neutral + this.state.bad;\n//   };\n\n//   countPositiveFeedbackPercentage = () => {\n//     return Math.floor((this.state.good * 100) / this.countTotalFeedback());\n//   }\n\n//   render() {\n//     const { good, neutral, bad } = this.state;\n//     const total = this.countTotalFeedback();\n//     const percentage = this.countPositiveFeedbackPercentage();\n\n//     return (\n//       <div className=\"Counter\">\n//         <h1 className=\"\">Please leave feedback</h1>\n//         <Buttons\n//           onGoodFeedback={this.goodFeedback}\n//           onNeutralFeedback={this.neutralFeedback}\n//           onBadFeedback={this.badFeedback}\n//         />\n//         <h2>Statistics</h2>\n//         <ul className=\"Statistics__list\">\n//           <li>\n//             <span className=\"Statistics__value\">Good:{good}</span>\n//           </li>\n//           <li>\n//             <span className=\"Statistics__value\">\n//               Neutral:{neutral}\n//             </span>\n//           </li>\n//           <li>\n//             <span className=\"Statistics__value\">Bad:{bad}</span>\n//           </li>\n//           <li>\n//             <span className=\"Statistics__value\">Total:{total}</span>\n//           </li>\n//           <li>\n//             <span className=\"Statistics__value\">Positive feedback:{percentage}%</span>\n//           </li>\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n\n// };\n\n// ================================\n\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//\n"],"sourceRoot":""}